<div class="page-heading">
	<div class="page-title">
		<div class="row">
			<div class="col-12 col-md-6 order-md-1 order-last">
				<h3>Send Messages</h3>
				<p class="text-subtitle text-muted">You Can Send Any Message With Your Session</p>
			</div>
			<div class="col-12 col-md-6 order-md-2 order-first">
				<nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end">
					<ol class="breadcrumb">
						<li class="breadcrumb-item"><a href="/dashboard">Dashboard</a></li>
						<li class="breadcrumb-item active" aria-current="page">Send Message</li>
					</ol>
				</nav>
			</div>
		</div>
	</div>
	<section id="content-types">
		<div class="row">
			<div class="col-xl-4 col-md-6 col-sm-12">
				<div class="card">
					<div class="card-content">
						<div class="card-body">
							<h4 class="card-title"><i class="fa-solid fa-font"></i>&nbsp;&nbsp; Send Text</h4>
							<p class="card-text">Send a simple text message</p>
						</div>
						<img class="img-fluid w-100" src="/image/sendText.png" alt="Card image send text" />
					</div>
					<div class="card-footer d-flex justify-content-between">
						<span>Try Now!</span>
						<button class="btn btn-primary" onclick="alertSendText()"><i class="fa-solid fa-font"></i>&nbsp;&nbsp; Send Text</button>
					</div>
				</div>
				<div class="card">
					<div class="card-content">
						<div class="card-body">
							<h5 class="card-title"><i class="fa-solid fa-square-check"></i>&nbsp; Send Buttons</h5>
							<p class="card-text">Send message button (maximum 3 buttons) with additional call button and url button</p>
						</div>
						<img src="/image/sendButton.png" class="card-img-top img-fluid" alt="Card image send button" />
					</div>
					<div class="card-footer d-flex justify-content-between">
						<span>Try Now!</span>
						<button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
							<i class="fa-solid fa-square-check"></i>&nbsp; Send Buttons
						</button>
					</div>
				</div>
				<div class="card">
					<div class="card-content">
						<div class="card-body">
							<h4 class="card-title"><i class="fa-solid fa-map-location-dot"></i>&nbsp; Send Location</h4>
							<p class="card-text">Send location with Latitude and Longitude coordinates</p>
						</div>
						<img class="img-fluid w-100" src="/image/sendLocation.png" alt="Card image send location" />
						<div class="card-footer d-flex justify-content-between">
							<span>Try Now!</span>
							<button class="btn btn-primary" onclick="alertSendLocation()"><i class="fa-solid fa-map-location-dot"></i>&nbsp; Send Location</button>
						</div>
					</div>
				</div>
			</div>
			<div class="col-xl-4 col-md-6 col-sm-12">
				<div class="card">
					<div class="card-content">
						<div class="card-body">
							<h5 class="card-title"><i class="fa-solid fa-address-card"></i>&nbsp; Send Contact</h5>
							<p class="card-text">Sending one or more contacts</p>
						</div>
						<img src="/image/sendContact.png" class="card-img-top img-fluid" alt="singleminded" />
					</div>
					<div class="card-footer d-flex justify-content-between">
						<span>Try Now!</span>
						<button class="btn btn-primary" onclick="alertSendContact()"><i class="fa-solid fa-address-card"></i>&nbsp; Send Contact</button>
					</div>
				</div>
				<div class="card">
					<div class="card-content">
						<div class="card-body">
							<h4 class="card-title"><i class="fa-solid fa-list-ul"></i>&nbsp; Send List Message</h4>
							<p class="card-text">Send a message list along with the description</p>
						</div>
						<div id="carouselExampleSlidesOnly" class="carousel slide" data-bs-ride="carousel">
							<div class="carousel-inner">
								<div class="carousel-item active">
									<img src="/image/sendList.png" class="d-block w-100" alt="Send List 1" />
								</div>
								<div class="carousel-item">
									<img src="/image/sendList2.png" class="d-block w-100" alt="Send List 2" />
								</div>
							</div>
						</div>
						<div class="card-footer d-flex justify-content-between">
							<span>Try Now!</span>
							<button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample2" aria-expanded="false" aria-controls="collapseExample">
								<i class="fa-solid fa-list-ul"></i>&nbsp; Send List Message
							</button>
						</div>
					</div>
				</div>
				<div class="card">
					<div class="card-content">
						<div class="card-body">
							<h5 class="card-title"><i class="fa-solid fa-cart-shopping"></i>&nbsp; Send Product</h5>
							<p class="card-text">Send a product message with an additional discounted price</p>
						</div>
						<img src="/image/sendProduct.png" class="card-img-top img-fluid" alt="Card image send Product" />
					</div>
					<div class="card-footer d-flex justify-content-between">
						<span>Try Now!</span>
						<button class="btn btn-primary" onclick="alertSendProduct()"><i class="fa-solid fa-cart-shopping"></i>&nbsp; Send Product</button>
					</div>
				</div>
			</div>
			<div class="col-xl-4 col-md-6 col-sm-12">
				<div class="card">
					<div class="card-content">
						<div class="card-body">
							<h4 class="card-title"><i class="fa-solid fa-folder-open"></i>&nbsp;&nbsp; Send Media</h4>
							<p class="card-text">Send a media message can be with a caption</p>
						</div>
						<div id="carouselExampleSlidesOnly" class="carousel slide" data-bs-ride="carousel">
							<div class="carousel-inner">
								<div class="carousel-item active">
									<img src="/image/sendMedia.png" class="d-block w-100" alt="Send Image" />
								</div>
								<div class="carousel-item">
									<img src="/image/sendMedia2.png" class="d-block w-100" alt="Send PDF" />
								</div>
								<div class="carousel-item">
									<img src="/image/sendMedia3.png" class="d-block w-100" alt="Send Excel" />
								</div>
							</div>
						</div>
						<div class="card-footer d-flex justify-content-between">
							<span>Try Now!</span>
							<button class="btn btn-primary" onclick="alertSendMedia()"><i class="fa-solid fa-folder-open"></i>&nbsp;&nbsp; Send Media</button>
						</div>
					</div>
				</div>
				<div class="card">
					<div class="card-content">
						<div class="card-body">
							<h5 class="card-title"><i class="fa-solid fa-image"></i>&nbsp; Send Sticker</h5>
							<p class="card-text">Send sticker messages with custom packname and author</p>
						</div>
						<img src="/image/sendSticker.png" class="card-img-top img-fluid" alt="Card image send Sticker" />
					</div>
					<div class="card-footer d-flex justify-content-between">
						<span>Try Now!</span>
						<button class="btn btn-primary" onclick="alertSendSticker()"><i class="fa-solid fa-image"></i>&nbsp; Send Sticker</button>
					</div>
				</div>
			</div>
		</div>
	</section>
	<section id="collapseExample" class="collapse">
		<div class="row match-height">
			<div class="col-12">
				<div class="card">
					<div class="card-header">
						<h4 class="card-title"><i class="fa-solid fa-square-check"></i>&nbsp; Send Buttons</h4>
					</div>
					<div class="card-content">
						<div class="card-body">
							<div class="row">
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Sender/Session Name</label>
										<select id="sessionsButton" name="sessions" class="form-select">
											<% if (Array.isArray(session) && session.length) { %> <% session.forEach((el, index) => { %>
											<option><%= el.session_name %> (+<%= el.session_number %>)</option>
											<% }) %> <% } %>
										</select>
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Text / Caption</label>
										<textarea id="messageButton" name="message" class="form-control" rows="2" placeholder="Hello"></textarea>
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Target Number</label>
										<input id="targetButton" type="number" name="target" class="form-control" placeholder="62813xxx" required />
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Footer Text</label>
										<input id="textFooterButton" type="text" name="textFooter" class="form-control" placeholder="Footer Text" />
									</div>
								</div>
								<p style="color: red"><strong>*Send With Image is Optional!</strong></p>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>File Image</label>
										<br />
										<input type="file" name="fileButton" accept="image/png, image/gif, image/jpeg, video/mp4" />
										<p><small class="text-muted">If You Want Send With Image, Choose one, using file or URL</small></p>
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>URL Image</label>
										<input id="urlButton" type="text" name="url" class="form-control" placeholder="https://i.postimg.cc/G2m1dtH5/cat.jpg" />
										<p><small class="text-muted">If You Want Send With Image, Choose one, using file or URL</small></p>
									</div>
								</div>
								<p style="color: red"><strong>*You don't need to complete all of the buttons below; each will send the message!</strong></p>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Text URL Button</label>
										<input id="texturlButton" type="text" name="urlButton" class="form-control" placeholder="URL Google" />
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Response Message When URL Button is Selected</label>
										<input id="responUrlButton" type="text" name="responUrl" class="form-control" placeholder="https://www.google.com/" />
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Text Call Button</label>
										<input id="callButton" type="text" name="callButton" class="form-control" placeholder="Contact Me" />
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Response Message When Call Button is Selected</label>
										<input id="responCallButton" type="number" name="responCall" class="form-control" placeholder="6281234567891" />
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Text Button 1</label>
										<input type="text" name="buttonText" class="form-control" placeholder="Button 1" required />
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Response Message When Button 1 is Selected</label>
										<textarea name="btnMessageText" class="form-control" rows="1" placeholder="First button reply message" required></textarea>
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Text Button 2</label>
										<input type="text" name="buttonText" class="form-control" placeholder="Button 2" />
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Response Message When Button 2 is Selected</label>
										<textarea name="btnMessageText" class="form-control" rows="1" placeholder="Second button reply message"></textarea>
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Text Button 3</label>
										<input type="text" name="buttonText" class="form-control" placeholder="Button 3" />
									</div>
								</div>
								<div class="col-md-6 col-12">
									<div class="form-group">
										<label>Response Message When Button 3 is Selected</label>
										<textarea name="btnMessageText" class="form-control" rows="1" placeholder="Third button reply message"></textarea>
									</div>
								</div>
								<div class="col-sm-12 d-flex justify-content-end">
									<button onclick="alertSendButton()" type="submit" class="btn btn-primary me-1 mb-1"><i class="fa-solid fa-paper-plane"></i>&nbsp; Send</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
	<section id="collapseExample2" class="collapse">
		<div class="card">
			<div class="card-header">
				<h5 class="card-title"><i class="fa-solid fa-list-ul"></i>&nbsp; Send List Message</h5>
				<p>The maximum message list option is 20, but here I only give 5 row options that can be filled in</p>
			</div>
			<div class="card-body">
				<div class="row">
					<div class="col-md-6 col-12">
						<div class="form-group">
							<label>Sender/Session Name</label>
							<select id="sessionsList" name="sessions" class="form-select">
								<% if (Array.isArray(session) && session.length) { %> <% session.forEach((el, index) => { %>
								<option><%= el.session_name %> (+<%= el.session_number %>)</option>
								<% }) %> <% } %>
							</select>
						</div>
					</div>
					<div class="col-md-6 col-12">
						<div class="form-group">
							<label>Target Number</label>
							<input id="targetList" type="number" name="target" class="form-control" placeholder="62813xxx" required />
						</div>
					</div>
					<div class="col-md-6 col-12">
						<div class="form-group">
							<label>Title Text</label>
							<input id="titleList" type="text" name="title" class="form-control" placeholder="Hello World" required />
						</div>
					</div>
					<div class="col-md-6 col-12">
						<div class="form-group">
							<label>Body Text</label>
							<input id="bodyList" type="text" name="body" class="form-control" placeholder="I'm using whatsapp" required />
						</div>
					</div>
					<div class="col-md-6 col-12">
						<div class="form-group">
							<label>Footer Text</label>
							<input id="footerList" type="text" name="footer" class="form-control" placeholder="This is footer text" required />
						</div>
					</div>
					<div class="col-md-6 col-12">
						<div class="form-group">
							<label>Button Text</label>
							<input id="buttonList" type="text" name="button" class="form-control" placeholder="I have a special list for you" required />
						</div>
					</div>
				</div>
				<br />
				<h5>Row Message Table</h5>
				<div style="overflow-x: auto !important">
					<table class="table" id="table1">
						<thead>
							<tr>
								<th>Row.</th>
								<th>Row Title</th>
								<th>Row Description</th>
								<th>Response if Row Selected</th>
							</tr>
						</thead>
						<tbody>
							<% for( let i = 0; i < 3; i++ ) { %>
							<tr>
								<td><%= i+1 %></td>
								<td><input type="text" name="titleRow" class="form-control" placeholder="This is option <%= i+1 %> " /></td>
								<td><textarea name="descRow" class="form-control" rows="2" placeholder="This is a description <%= i+1 %> "></textarea></td>
								<td><textarea name="respRow" class="form-control" rows="2" placeholder="This is a response option <%= i+1 %> "></textarea></td>
							</tr>
							<% } %>
						</tbody>
					</table>
					<div class="col-sm-12 d-flex justify-content-end">
						<button onclick="alertSendList()" class="btn btn-primary me-1 mb-1"><i class="fa-solid fa-paper-plane"></i>&nbsp; Send</button>
					</div>
				</div>
			</div>
		</div>
	</section>
</div>

<script>
	async function alertSendText() {
		var htmlSwal =
			"<center>" +
			`<label style="padding: 10px;">Session</label><div class="col-md-8 form-group"><select id="sessionText" name="sessions" class="form-select"><% if (Array.isArray(session) && session.length) { %> <% session.forEach((el, index) => { %><option><%= el.session_name %> (+<%= el.session_number %>)</option><% }) %> <% } %></select></div>` +
			`<label style="padding: 10px;">Target Number</label><div class="col-md-8 form-group"><input id="targetText" type="number" name="target" class="form-control" placeholder="6281234567890" required /></div>` +
			`<label style="padding: 10px;">Caption/Text</label><div class="col-md-8 form-group"><textarea id="messageText" name="message" class="form-control" rows="2" placeholder="Hello" required ></textarea></div>` +
			"</center>";
		Swal.fire({
			title: `<i class="fa-solid fa-font"></i>&nbsp;&nbsp;  Send Text`,
			html: htmlSwal,
			focusConfirm: false,
			showCancelButton: true,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: `<i class="fa-solid fa-paper-plane"></i>&nbsp;  Send Message`,
			showLoaderOnConfirm: true,
			preConfirm: () => {
				var data = {
					sessions: document.getElementById("sessionText").value,
					target: document.getElementById("targetText").value,
					message: document.getElementById("messageText").value,
				};
				if (!data.sessions || !data.target || !data.message) {
					return Swal.showValidationMessage(`Input Data!`);
				}
				return fetch(`/api/sendtext`, {
					method: "POST",
					body: JSON.stringify(data),
					headers: {
						"Content-Type": "application/json",
					},
				})
					.then((response) => {
						if (!response.ok) {
							throw new Error(response.statusText);
						}
						return response.json();
					})
					.catch((error) => {
						Swal.showValidationMessage(`Request failed: ${error}! Input Your Data!`);
					});
			},
		}).then((result) => {
			if (result.isConfirmed) {
				if (result.value.status == 200) {
					Swal.fire(`Success`, JSON.stringify(result.value.message), "success");
				} else {
					Swal.fire(`Status ${result.value.status}`, JSON.stringify(result.value.message), "error");
				}
			}
		});
	}

	async function alertSendMedia() {
		var htmlSwal =
			"<center>" +
			`<label style="padding: 10px;">Image File</label><div class="col-md-8 form-group"><input type="file" name="fileMedia" /></div>` +
			`<label style="padding: 10px;">URL File</label><div class="col-md-8 form-group"><input type="url" name="url" id="urlMedia" class="form-control" placeholder="https://i.postimg.cc/G2m1dtH5/cat.jpg" /></div>` +
			`<p><small class="text-muted">Choose one, using file or URL</small></p>` +
			`<label style="padding: 10px;">Session</label><div class="col-md-8 form-group"><select id="sessionMedia" name="sessions" class="form-select"><% if (Array.isArray(session) && session.length) { %> <% session.forEach((el, index) => { %><option><%= el.session_name %> (+<%= el.session_number %>)</option><% }) %> <% } %></select></div>` +
			`<label style="padding: 10px;">Target Number</label><div class="col-md-8 form-group"><input id="targetMedia" type="number" name="target" class="form-control" placeholder="6281234567890" required /></div>` +
			`<label style="padding: 10px;">Caption/Text</label><div class="col-md-8 form-group"><textarea id="messageMedia" name="message" class="form-control" rows="2" placeholder="Hello" required ></textarea></div>` +
			`<p><small class="text-muted">Caption can be empty, not Required</small></p>` +
			"</center>";
		Swal.fire({
			title: `<i class="fa-solid fa-folder-open"></i>&nbsp;&nbsp; Send Media`,
			html: htmlSwal,
			focusConfirm: false,
			showCancelButton: true,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: `<i class="fa-solid fa-paper-plane"></i>&nbsp;  Send Message`,
			showLoaderOnConfirm: true,
			preConfirm: () => {
				var input = document.querySelector('input[name="fileMedia"]');

				if (input.files[0]) {
					var form = new FormData();
					form.append("file", input.files[0]);
					form.append("sessions", document.getElementById("sessionMedia").value);
					form.append("target", document.getElementById("targetMedia").value);
					form.append("message", document.getElementById("messageMedia").value);
					var headers = {};
					var data = form;
				} else {
					var data = JSON.stringify({
						sessions: document.getElementById("sessionMedia").value,
						target: document.getElementById("targetMedia").value,
						message: document.getElementById("messageMedia").value,
						url: document.getElementById("urlMedia").value,
					});
					var headers = {
						"Content-Type": "application/json",
					};
				}
				return fetch(`/api/sendmedia`, { method: "POST", body: data, headers })
					.then((response) => {
						if (!response.ok) {
							throw new Error(response.statusText);
						}
						return response.json();
					})
					.catch((error) => {
						Swal.showValidationMessage(`Request failed: ${error}! Input Your Data!`);
					});
			},
		}).then((result) => {
			if (result.isConfirmed) {
				if (result.value.status == 200) {
					Swal.fire(`Success`, JSON.stringify(result.value.message), "success");
				} else {
					Swal.fire(`Status ${result.value.status}`, JSON.stringify(result.value.message), "error");
				}
			}
		});
	}

	async function alertSendSticker() {
		var htmlSwal =
			"<center>" +
			`<label style="padding: 10px;">Image File</label><div class="col-md-8 form-group"><input type="file" name="fileSticker" accept="image/png, image/gif, image/jpeg, video/mp4" /></div>` +
			`<label style="padding: 10px;">URL File</label><div class="col-md-8 form-group"><input type="url" name="url" id="urlSticker" class="form-control" placeholder="https://i.postimg.cc/G2m1dtH5/cat.jpg" /></div>` +
			`<p><small class="text-muted">Choose one, using file or URL</small></p>` +
			`<label style="padding: 10px;">Session</label><div class="col-md-8 form-group"><select id="sessionSticker" name="sessions" class="form-select"><% if (Array.isArray(session) && session.length) { %> <% session.forEach((el, index) => { %><option><%= el.session_name %> (+<%= el.session_number %>)</option><% }) %> <% } %></select></div>` +
			`<label style="padding: 10px;">Target Number</label><div class="col-md-8 form-group"><input id="targetSticker" type="number" name="target" class="form-control" placeholder="6281234567890" required /></div>` +
			`<label style="padding: 10px;">Packname</label><div class="col-md-8 form-group"><input id="packnameSticker" type="text" name="packname" class="form-control" value="Zekais" /></div>` +
			`<label style="padding: 10px;">Author</label><div class="col-md-8 form-group"><input id="authorSticker" type="text" name="author" class="form-control" value="b0t" /></div>` +
			`<a href="https://i.postimg.cc/6QCsq7R5/Whats-App-Image-2022-03-11-at-14-00-02.jpg" target="_blank">Example Packname & Author</a>` +
			"</center>";
		Swal.fire({
			title: `<i class="fa-solid fa-image"></i>&nbsp; Send Sticker`,
			html: htmlSwal,
			focusConfirm: false,
			showCancelButton: true,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: `<i class="fa-solid fa-image"></i>&nbsp; Send Sticker`,
			showLoaderOnConfirm: true,
			preConfirm: () => {
				var input = document.querySelector('input[name="fileSticker"]');
				if (input.files[0]) {
					var form = new FormData();
					form.append("file", input.files[0]);
					form.append("sessions", document.getElementById("sessionSticker").value);
					form.append("target", document.getElementById("targetSticker").value);
					form.append("packname", document.getElementById("packnameSticker").value);
					form.append("author", document.getElementById("authorSticker").value);
					var headers = {};
					var data = form;
				} else if (!input.files[0] && document.getElementById("urlSticker").value) {
					var data = JSON.stringify({
						sessions: document.getElementById("sessionSticker").value,
						target: document.getElementById("targetSticker").value,
						packname: document.getElementById("packnameSticker").value,
						author: document.getElementById("authorSticker").value,
						url: document.getElementById("urlSticker").value,
					});
					var headers = {
						"Content-Type": "application/json",
					};
				} else {
					return Swal.showValidationMessage(`Input Data Image/Video!`);
				}
				return fetch(`/api/sendsticker`, { method: "POST", body: data, headers })
					.then((response) => {
						if (!response.ok) {
							throw new Error(response.statusText);
						}
						return response.json();
					})
					.catch((error) => {
						Swal.showValidationMessage(`Request failed: ${error}! Input Your Data!`);
					});
			},
		}).then((result) => {
			if (result.isConfirmed) {
				if (result.value.status == 200) {
					Swal.fire(`Success`, JSON.stringify(result.value.message), "success");
				} else {
					Swal.fire(`Status ${result.value.status}`, JSON.stringify(result.value.message), "error");
				}
			}
		});
	}

	async function alertSendContact() {
		var htmlSwal =
			"<center>" +
			`<label style="padding: 10px;">Session</label><div class="col-md-8 form-group"><select id="sessionContact" class="form-select"><% if (Array.isArray(session) && session.length) { %> <% session.forEach((el, index) => { %><option><%= el.session_name %> (+<%= el.session_number %>)</option><% }) %> <% } %></select></div>` +
			`<label style="padding: 10px;">Target Number</label><div class="col-md-8 form-group"><input id="targetContact" type="number" class="form-control" placeholder="6281234567890" required /></div>` +
			`<label style="padding: 10px;">Contact Number</label><div class="col-md-8 form-group"><input type="number" id="contact" class="form-control" placeholder="6280987654321" required /></div>` +
			`<label style="padding: 10px;">Contact Name</label><div class="col-md-8 form-group"><input type="text" id="contactName" class="form-control" placeholder="Abdul" required /></div>` +
			`<label style="padding: 10px;">Another Contact</label><div class="col-md-8 form-group"><textarea id="anotherContact" class="form-control" rows="2" placeholder="628111111111 - Baba, 62822222222 - Caca" required ></textarea></div>` +
			`<p><small style="color: red" class="text-muted">Separate contact number and name by using - (min)<br />And separate the second contact with , (comma)</small></p>` +
			"</center>";
		Swal.fire({
			title: `<i class="fa-solid fa-address-card"></i>&nbsp; Send Contact`,
			html: htmlSwal,
			focusConfirm: false,
			showCancelButton: true,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: `<i class="fa-solid fa-paper-plane"></i>&nbsp;  Send Message`,
			showLoaderOnConfirm: true,
			preConfirm: () => {
				var data = {
					sessions: document.getElementById("sessionContact").value,
					target: document.getElementById("targetContact").value,
					contact: document.getElementById("contact").value,
					contactName: document.getElementById("contactName").value,
					anotherContact: document.getElementById("anotherContact").value,
				};
				if (!data.sessions || !data.target || !data.contact || !data.contactName) {
					return Swal.showValidationMessage(`Input Data!`);
				}
				return fetch(`/api/sendcontact`, {
					method: "POST",
					body: JSON.stringify(data),
					headers: {
						"Content-Type": "application/json",
					},
				})
					.then((response) => {
						if (!response.ok) {
							throw new Error(response.statusText);
						}
						return response.json();
					})
					.catch((error) => {
						Swal.showValidationMessage(`Request failed: ${error}! Input Your Data!`);
					});
			},
		}).then((result) => {
			if (result.isConfirmed) {
				if (result.value.status == 200) {
					Swal.fire(`Success`, JSON.stringify(result.value.message), "success");
				} else {
					Swal.fire(`Status ${result.value.status}`, JSON.stringify(result.value.message), "error");
				}
			}
		});
	}

	async function alertSendButton() {
		Swal.fire({
			title: `<i class="fa-solid fa-square-check"></i>&nbsp; Send Buttons`,
			html: `Are You Sure?`,
			icon: "question",
			confirmButtonText: `<i class="fa-solid fa-square-check"></i>&nbsp; Send Buttons`,
			showLoaderOnConfirm: true,
			preConfirm: () => {
				let arrayButton = [];
				let button = document.getElementsByName("buttonText");
				for (let index = 0; index < button.length; index++) {
					if (button[index].value) {
						arrayButton.push(button[index].value);
					}
				}
				let arrayButton2 = [];
				let button2 = document.getElementsByName("btnMessageText");
				for (let index = 0; index < button2.length; index++) {
					if (button2[index].value) {
						arrayButton2.push(button2[index].value);
					}
				}

				var input = document.querySelector('input[name="fileButton"]');
				if (input.files[0]) {
					var form = new FormData();
					form.append("file", input.files[0]);
					form.append("sessions", document.getElementById("sessionsButton").value);
					form.append("target", document.getElementById("targetButton").value);
					form.append("message", document.getElementById("messageButton").value);
					form.append("textFooter", document.getElementById("textFooterButton").value);
					form.append("urlButton", document.getElementById("texturlButton").value);
					form.append("responUrl", document.getElementById("responUrlButton").value);
					form.append("callButton", document.getElementById("callButton").value);
					form.append("responCall", document.getElementById("responCallButton").value);
					for (const value of arrayButton) {
						console.log(value);
						form.append("button", value);
					}
					for (const value2 of arrayButton2) {
						form.append("btnMessage", value2);
					}
					var headers = {};
					var data = form;
				} else {
					let form = {
						sessions: document.getElementById("sessionsButton").value,
						target: document.getElementById("targetButton").value,
						message: document.getElementById("messageButton").value,
						textFooter: document.getElementById("textFooterButton").value,
						url: document.getElementById("urlButton").value,
						urlButton: document.getElementById("texturlButton").value,
						responUrl: document.getElementById("responUrlButton").value,
						callButton: document.getElementById("callButton").value,
						responCall: document.getElementById("responCallButton").value,
						button: arrayButton,
						btnMessage: arrayButton2,
					};
					var headers = { "Content-Type": "application/json" };
					var data = JSON.stringify(form);
				}

				return fetch(`/api/sendbutton`, {
					method: "POST",
					body: data,
					headers,
				})
					.then((response) => {
						if (!response.ok) {
							throw new Error(response.statusText);
						}
						return response.json();
					})
					.catch((error) => {
						Swal.showValidationMessage(`Request failed: ${error}!`);
					});
			},
		}).then((result) => {
			if (result.isConfirmed) {
				if (result.value.status == 200) {
					Swal.fire("Success!", JSON.stringify(result.value.message), "success");
				} else {
					Swal.fire(`Status ${result.value.status}`, JSON.stringify(result.value.message), "error");
				}
			}
		});
	}

	async function alertSendList() {
		Swal.fire({
			title: `<i class="fa-solid fa-list-ul"></i>&nbsp; Send List Message`,
			html: `Are You Sure?`,
			icon: "question",
			confirmButtonText: `<i class="fa-solid fa-list-ul"></i>&nbsp; Send List Message`,
			showLoaderOnConfirm: true,
			preConfirm: () => {
				let arrayButton = [];
				let button = document.getElementsByName("titleRow");
				for (let index = 0; index < button.length; index++) {
					if (button[index].value) {
						arrayButton.push(button[index].value);
					}
				}
				let arrayButton2 = [];
				let button2 = document.getElementsByName("descRow");
				for (let index = 0; index < button2.length; index++) {
					if (button2[index].value) {
						arrayButton2.push(button2[index].value);
					}
				}
				let arrayButton3 = [];
				let button3 = document.getElementsByName("respRow");
				for (let index = 0; index < button3.length; index++) {
					if (button3[index].value) {
						arrayButton3.push(button3[index].value);
					}
				}

				let data = {
					sessions: document.getElementById("sessionsList").value,
					target: document.getElementById("targetList").value,
					body: document.getElementById("bodyList").value,
					title: document.getElementById("titleList").value,
					footer: document.getElementById("footerList").value,
					button: document.getElementById("buttonList").value,
					titleRow: arrayButton,
					descRow: arrayButton2,
					respRow: arrayButton3,
				};

				return fetch(`/api/sendlist`, {
					method: "POST",
					body: JSON.stringify(data),
					headers: { "Content-Type": "application/json" },
				})
					.then((response) => {
						if (!response.ok) {
							throw new Error(response.statusText);
						}
						return response.json();
					})
					.catch((error) => {
						Swal.showValidationMessage(`Request failed: ${error}!`);
					});
			},
		}).then((result) => {
			if (result.isConfirmed) {
				if (result.value.status == 200) {
					Swal.fire("Success!", JSON.stringify(result.value.message), "success");
				} else {
					Swal.fire(`Status ${result.value.status}`, JSON.stringify(result.value.message), "error");
				}
			}
		});
	}

	async function alertSendLocation() {
		var htmlSwal =
			"<center>" +
			`<label style="padding: 10px;">Session</label><div class="col-md-8 form-group"><select id="sessionLoc" name="sessions" class="form-select"><% if (Array.isArray(session) && session.length) { %> <% session.forEach((el, index) => { %><option><%= el.session_name %> (+<%= el.session_number %>)</option><% }) %> <% } %></select></div>` +
			`<label style="padding: 10px;">Target Number</label><div class="col-md-8 form-group"><input id="targetLoc" type="number" name="target" class="form-control" placeholder="6281234567890" required /></div>` +
			`<label style="padding: 10px;">Longitude Coordinates</label><div class="col-md-8 form-group"><input id="longLoc" type="number" name="long" class="form-control" value="106.82760040044384" required /></div>` +
			`<label style="padding: 10px;">Latitude Coordinates</label><div class="col-md-8 form-group"><input id="latLoc" type="number" name="lat" class="form-control" value="-6.174065858237926" required /></div>` +
			"</center>";
		Swal.fire({
			title: `<i class="fa-solid fa-map-location-dot"></i>&nbsp;&nbsp;  Send Location`,
			html: htmlSwal,
			focusConfirm: false,
			showCancelButton: true,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: `<i class="fa-solid fa-paper-plane"></i>&nbsp;  Send Location`,
			showLoaderOnConfirm: true,
			preConfirm: () => {
				var data = {
					sessions: document.getElementById("sessionLoc").value,
					target: document.getElementById("targetLoc").value,
					long: document.getElementById("longLoc").value,
					lat: document.getElementById("latLoc").value,
				};
				if (!data.sessions || !data.target || !data.long || !data.lat) {
					return Swal.showValidationMessage(`Input Data!`);
				}
				return fetch(`/api/sendlocation`, {
					method: "POST",
					body: JSON.stringify(data),
					headers: {
						"Content-Type": "application/json",
					},
				})
					.then((response) => {
						if (!response.ok) {
							throw new Error(response.statusText);
						}
						return response.json();
					})
					.catch((error) => {
						Swal.showValidationMessage(`Request failed: ${error}! Input Your Data!`);
					});
			},
		}).then((result) => {
			if (result.isConfirmed) {
				if (result.value.status == 200) {
					Swal.fire(`Success`, JSON.stringify(result.value.message), "success");
				} else {
					Swal.fire(`Status ${result.value.status}`, JSON.stringify(result.value.message), "error");
				}
			}
		});
	}

	async function alertSendProduct() {
		var htmlSwal =
			"<center>" +
			`<label style="padding: 10px;">Image File</label><div class="col-md-8 form-group"><input type="file" name="fileProduct" /></div>` +
			`<label style="padding: 10px;">URL File</label><div class="col-md-8 form-group"><input type="url" name="url" id="urlProduct" class="form-control" placeholder="https://i.postimg.cc/G2m1dtH5/cat.jpg" /></div>` +
			`<p><small class="text-muted">Choose one, using file or URL</small></p>` +
			`<label style="padding: 10px;">Session</label><div class="col-md-8 form-group"><select id="sessionProduct" name="sessions" class="form-select"><% if (Array.isArray(session) && session.length) { %> <% session.forEach((el, index) => { %><option><%= el.session_name %> (+<%= el.session_number %>)</option><% }) %> <% } %></select></div>` +
			`<label style="padding: 10px;">Target Number</label><div class="col-md-8 form-group"><input id="targetProduct" type="number" name="target" class="form-control" placeholder="6281234567890" required /></div>` +
			`<p>Input Product can be empty, not Required</p>` +
			`<label style="padding: 10px;">Product Title</label><div class="col-md-8 form-group"><input id="titleProduct" type="text" name="title" class="form-control" placeholder="Product Title" required /></div>` +
			`<label style="padding: 10px;">Product Body</label><div class="col-md-8 form-group"><input id="bodyProduct" type="text" name="body" class="form-control" placeholder="Product Body" required /></div>` +
			`<label style="padding: 10px;">Product Footer</label><div class="col-md-8 form-group"><input id="footerProduct" type="text" name="footer" class="form-control" placeholder="Product Footer" required /></div>` +
			`<label style="padding: 10px;">Bussines Owner</label><div class="col-md-8 form-group"><input id="ownerProduct" type="number" name="owner" class="form-control" placeholder="6281234567890" required /></div>` +
			`<label style="padding: 10px;">Currency Code</label><div class="col-md-8 form-group"><input id="currencyCodeProduct" type="text" name="currency" class="form-control" value="IDR" required /></div>` +
			`<label style="padding: 10px;">Price</label><div class="col-md-8 form-group"><input id="priceProduct" type="number" name="price" class="form-control" value="10000000" required /></div>` +
			`<label style="padding: 10px;">Sale Price</label><div class="col-md-8 form-group"><input id="salePriceProduct" type="number" name="salePrice" class="form-control" value="2000000" required /></div>` +
			"</center>";
		Swal.fire({
			title: `<i class="fa-solid fa-cart-shopping"></i>&nbsp;&nbsp; Send Product`,
			html: htmlSwal,
			focusConfirm: false,
			showCancelButton: true,
			confirmButtonColor: "#3085d6",
			cancelButtonColor: "#d33",
			confirmButtonText: `<i class="fa-solid fa-paper-plane"></i>&nbsp;  Send Product`,
			showLoaderOnConfirm: true,
			preConfirm: () => {
				var input = document.querySelector('input[name="fileProduct"]');

				if (input.files[0]) {
					var form = new FormData();
					form.append("file", input.files[0]);
					form.append("sessions", document.getElementById("sessionProduct").value);
					form.append("target", document.getElementById("targetProduct").value);
					form.append("message", document.getElementById("bodyProduct").value);
					form.append("title", document.getElementById("titleProduct").value);
					form.append("footer", document.getElementById("footerProduct").value);
					form.append("owner", document.getElementById("ownerProduct").value);
					form.append("currency", document.getElementById("currencyCodeProduct").value);
					form.append("price", document.getElementById("priceProduct").value);
					form.append("salePrice", document.getElementById("salePriceProduct").value);
					var headers = {};
					var data = form;
				} else {
					var data = JSON.stringify({
						sessions: document.getElementById("sessionProduct").value,
						target: document.getElementById("targetProduct").value,
						message: document.getElementById("bodyProduct").value,
						title: document.getElementById("titleProduct").value,
						footer: document.getElementById("footerProduct").value,
						owner: document.getElementById("ownerProduct").value,
						currency: document.getElementById("currencyCodeProduct").value,
						price: document.getElementById("priceProduct").value,
						salePrice: document.getElementById("salePriceProduct").value,
						url: document.getElementById("urlProduct").value,
					});
					var headers = {
						"Content-Type": "application/json",
					};
				}
				return fetch(`/api/sendproduct`, { method: "POST", body: data, headers })
					.then((response) => {
						if (!response.ok) {
							throw new Error(response.statusText);
						}
						return response.json();
					})
					.catch((error) => {
						Swal.showValidationMessage(`Request failed: ${error}! Input Your Data!`);
					});
			},
		}).then((result) => {
			if (result.isConfirmed) {
				if (result.value.status == 200) {
					Swal.fire(`Success`, JSON.stringify(result.value.message), "success");
				} else {
					Swal.fire(`Status ${result.value.status}`, JSON.stringify(result.value.message), "error");
				}
			}
		});
	}
</script>
